#%RAML 1.0
title: Maximum Alpha
version: v1
baseUri: http://localhost/api/{version}
securitySchemes:
  - jwt:
      description: JSON Web Token
      type: x-custom
      describedBy:
          queryParameters:
            token:
              description: JSON Web Token
              type: string
              example: abasf
types:
  User:
    type: object
    properties:
      username:   string
      password:   string
      active:     boolean
  Users:
    type: object
    properties:
      users: User[]
  Card:
    type: object
    properties:
      name:       string
      type:
        enum: [creature, structure, spell]
      cost:       ResourceList
      text:       string
      flavorText: string
  Cards:
    type: object
    properties:
      cards: Card[]
  Creature:
    type: Card
    properties:
      attack:     integer
      health:     integer
  Structure:
    type: Card
    properties:
      health:     integer
  Spell:
    type: Card
  ResourceList:
    type: object
    properties:
      red:        integer
      black:      integer
      green:      integer
      white:      integer
      yellow:     integer
      blue:       integer
      colorless:  integer
  Deck:
    type: object
    properties:
      owner:      User
      mainCards:  Card[]
      structures: Structure[]
  Decks:
    type: object
    properties:
      cards: Deck[]
resourceTypes:
  collection:
    usage: This resourceType should be used for any collection of items
    description: The collection of <<resourcePathName>>
    get:
      description: Get all <<resourcePathName>>, optionally filtered
    post:
      description: Create a new <<resourcePathName | !singularize>>
traits:
  - secured:
      description: Some requests require authentication
      queryParameters:
        token:
          description: A JSON Web Token is required
          example: token=abasf
/authenticate:
  /login:
    post:
      description: login endpoint
/users:
  type: collection
  get:
    queryParameters:
      userId:
        type: string
        required: false
    responses:
      200:
        body:
          application/json:
            type: Users
  post:
    responses:
      200:
        body:
          application/json:
            type: User
  put:
    is: secured
    responses:
      204:
  delete:
    responses:
      202:
        description: User gets marked as inactive.
/decks:
  type: collection
  get:
    queryParameters:
      deckId:     string
      userId:     string
    responses:
      200:
        body:
          application/json:
            type: Deck[]
  post:
    responses:
      200:
        body:
          application/json:
            type: User
  put:
    is: secured
    responses:
      204:
  delete:
    responses:
      204:
/cards:
  type: collection
  get:
    queryParameters:
      deckId:
        type: string
        required: false
      userId:
        type: string
        required: false
